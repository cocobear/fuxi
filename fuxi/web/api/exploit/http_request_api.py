#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Author  : jeffzhang
# @Time    : 2019/9/5
# @File    : http_request_api.py
# @Desc    : ""

from flask import request, session
from flask_restful import Resource, reqparse
from fuxi.common.utils.logger import logger
from fuxi.core.auth.token import auth
from fuxi.core.databases.orm.exploit.http_log_orm import DBHttpRequestLog
from fuxi.common.utils.time_format import timestamp_to_str
from fuxi.core.data.response import Response

parser = reqparse.RequestParser()
parser.add_argument('keyword', type=str)


class HttpRequestLogV1(Resource):
    @auth
    def get(self):
        data = []
        try:
            args = parser.parse_args()
            keyword = args['keyword']
            if not keyword:
                items = DBHttpRequestLog.get_list()
            else:
                items = DBHttpRequestLog.get_list(keyword)
            for item in items:
                data.append({
                    "hid": str(item['_id']),
                    "ip": item['ip'],
                    "referrer": item['referrer'],
                    "data": item['data'],
                    "date": timestamp_to_str(item['date']),
                })
            return Response.success(data=data)
        except Exception as e:
            msg = "获取HTTP请求日志失败: {}".format(e)
            logger.warning(msg)
            return Response.failed(data=data, message=msg)


class HttpRequestLogManageV1(Resource):
    @auth
    def delete(self, hid):
        try:
            op = session.get('user')
            DBHttpRequestLog.delete_by_id(hid)
            logger.info("{} delete http request log: {}".format(op, hid))
            return Response.success(message="删除成功")
        except Exception as e:
            msg = "删除HTTP请求日志失败: {}".format(e)
            logger.warning(msg)
            return Response.failed(message=msg)
